/**
 * This class is generated by jOOQ
 */
package us.core_network.crust.io.dsl.tables.records;


import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record3;
import org.jooq.Row3;
import org.jooq.impl.UpdatableRecordImpl;

import us.core_network.crust.io.dsl.tables.TPlayer;


/**
 * This class is generated by jOOQ.
 */
@Generated(
	value = {
		"http://www.jooq.org",
		"jOOQ version:3.6.0"
	},
	comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class PlayerRecord extends UpdatableRecordImpl<PlayerRecord> implements Record3<String, Integer, String> {

	private static final long serialVersionUID = -1206432268;

	/**
	 * Setter for <code>player.id</code>.
	 */
	public void setId(String value) {
		setValue(0, value);
	}

	/**
	 * Getter for <code>player.id</code>.
	 */
	public String getId() {
		return (String) getValue(0);
	}

	/**
	 * Setter for <code>player.claimBlocks</code>.
	 */
	public void setClaimblocks(Integer value) {
		setValue(1, value);
	}

	/**
	 * Getter for <code>player.claimBlocks</code>.
	 */
	public Integer getClaimblocks() {
		return (Integer) getValue(1);
	}

	/**
	 * Setter for <code>player.lastName</code>.
	 */
	public void setLastname(String value) {
		setValue(2, value);
	}

	/**
	 * Getter for <code>player.lastName</code>.
	 */
	public String getLastname() {
		return (String) getValue(2);
	}

	// -------------------------------------------------------------------------
	// Primary key information
	// -------------------------------------------------------------------------

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Record1<String> key() {
		return (Record1) super.key();
	}

	// -------------------------------------------------------------------------
	// Record3 type implementation
	// -------------------------------------------------------------------------

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Row3<String, Integer, String> fieldsRow() {
		return (Row3) super.fieldsRow();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Row3<String, Integer, String> valuesRow() {
		return (Row3) super.valuesRow();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Field<String> field1() {
		return TPlayer.PLAYER.ID;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Field<Integer> field2() {
		return TPlayer.PLAYER.CLAIMBLOCKS;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Field<String> field3() {
		return TPlayer.PLAYER.LASTNAME;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public String value1() {
		return getId();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Integer value2() {
		return getClaimblocks();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public String value3() {
		return getLastname();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public PlayerRecord value1(String value) {
		setId(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public PlayerRecord value2(Integer value) {
		setClaimblocks(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public PlayerRecord value3(String value) {
		setLastname(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public PlayerRecord values(String value1, Integer value2, String value3) {
		value1(value1);
		value2(value2);
		value3(value3);
		return this;
	}

	// -------------------------------------------------------------------------
	// Constructors
	// -------------------------------------------------------------------------

	/**
	 * Create a detached PlayerRecord
	 */
	public PlayerRecord() {
		super(TPlayer.PLAYER);
	}

	/**
	 * Create a detached, initialised PlayerRecord
	 */
	public PlayerRecord(String id, Integer claimblocks, String lastname) {
		super(TPlayer.PLAYER);

		setValue(0, id);
		setValue(1, claimblocks);
		setValue(2, lastname);
	}
}
